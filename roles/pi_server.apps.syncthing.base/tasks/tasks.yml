- name: Dependency
  ansible.builtin.include_role:
    name: pi_server.apps.traefik

- name: Dependency
  ansible.builtin.include_role:
    name: pi_server.apps.control_panel.https

- name: Apt key
  become: true
  ansible.builtin.apt_key:
    url: "https://syncthing.net/release-key.gpg"

- name: Apt repo
  become: true
  ansible.builtin.apt_repository:
    repo: "deb https://apt.syncthing.net/ syncthing stable"
    filename: syncthing
    mode: "0644"

- name: Install
  become: true
  ansible.builtin.package:
    name: syncthing
    state: present

- name: Config dir
  become: true
  ansible.builtin.file:
    path: "{{ args.config_dir }}"
    state: directory
    owner: "{{ args.user }}"
    group: "{{ args.user }}"
    mode: u=rwx,go=

- name: Generate initial config
  become: true
  become_user: "{{ args.user }}"
  ansible.builtin.command:
    cmd: "syncthing '--generate={{ args.config_dir }}' --no-default-folder"
    creates: "{{ args.config_dir }}/config.xml"

- name: Disable global discovery
  become: true
  community.general.xml:
    path: "{{ args.config_dir }}/config.xml"
    xpath: "/configuration/options/globalAnnounceEnabled"
    value: "false"

- name: Disable start browser
  become: true
  community.general.xml:
    path: "{{ args.config_dir }}/config.xml"
    xpath: "/configuration/options/startBrowser"
    value: "false"

- name: Disable relaying
  become: true
  community.general.xml:
    path: "{{ args.config_dir }}/config.xml"
    xpath: "/configuration/options/relaysEnabled"
    value: "false"

- name: Disable NAT
  become: true
  community.general.xml:
    path: "{{ args.config_dir }}/config.xml"
    xpath: "/configuration/options/natEnabled"
    value: "false"

- name: Disable usage reporting
  become: true
  community.general.xml:
    path: "{{ args.config_dir }}/config.xml"
    xpath: "/configuration/options/urAccepted"
    value: "-1"

- name: Disable crash reporting
  become: true
  community.general.xml:
    path: "{{ args.config_dir }}/config.xml"
    xpath: "/configuration/options/crashReportingEnabled"
    value: "false"

- name: Disable https for the gui
  become: true
  community.general.xml:
    path: "{{ args.config_dir }}/config.xml"
    xpath: "/configuration/gui"
    attribute: "tls"
    value: "false"

- name: Systemd service
  ansible.builtin.include_role:
    name: pi_server.utils.systemd_service
  vars:
    src: service.j2
    service: "{{ pi_server_apps_syncthing_service }}"
    enabled: true

- name: Monitoring
  ansible.builtin.include_role:
    name: pi_server.apps.monitoring.monitor_systemd_service
  vars:
    systemd_service: "{{ pi_server_apps_syncthing_service }}"

- name: Pause on cron
  ansible.builtin.include_role:
    name: pi_server.apps.cron.pause_systemd_on_cron
  vars:
    service: "{{ pi_server_apps_syncthing_service }}"

- name: Expose to traefik network
  ansible.builtin.include_role:
    name: pi_server.apps.traefik.open_host_port_to_containers
  vars:
    port: "{{ pi_server_apps_syncthing_web_port }}"

- name: Add to traefik
  ansible.builtin.include_role:
    name: pi_server.apps.traefik.http_host_service
  vars:
    name: syncthing-web
    entrypoint: "{{ pi_server_apps_control_panel_entrypoint }}"
    path_prefix: "syncthing"
    strip_prefix: true
    port: "{{ pi_server_apps_syncthing_web_port }}"
    https: true
    https_entrypoint: "{{ pi_server_apps_control_panel_https_entrypoint }}"

- name: Control panel fragment
  ansible.builtin.include_role:
    name: pi_server.apps.control_panel.fragment
  vars:
    src: fragment.html.j2
    name: syncthing

- name: TCP port
  ansible.builtin.include_role:
    name: pi_server.apps.firewall.tcp_port
  vars:
    port: "{{ pi_server_apps_syncthing_tcp_port }}"

- name: UDP port
  ansible.builtin.include_role:
    name: pi_server.apps.firewall.udp_port
  vars:
    port: "{{ pi_server_apps_syncthing_udp_port }}"
