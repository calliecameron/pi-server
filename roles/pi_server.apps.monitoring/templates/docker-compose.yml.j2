services:
  prometheus:
    image: prom/prometheus
    ports:
      - "{{ pi_server_apps_monitoring_prometheus_port }}:{{ pi_server_apps_monitoring_prometheus_port }}"
    restart: always
    volumes:
      - "{{ pi_server_apps_monitoring_prometheus_config }}:/etc/prometheus/prometheus.yml:ro"
      - "{{ pi_server_apps_monitoring_prometheus_scrapes }}:/scrapes.d:ro"
      - "{{ pi_server_apps_monitoring_prometheus_rules }}:/rules.d:ro"
      - prometheus-data:/prometheus
    extra_hosts:
      - host.docker.internal:host-gateway

  node_exporter:
    image: prom/node-exporter
    restart: always
    user: "{{ monitoring_user.uid }}:{{ monitoring_user.group }}"
    command:
      - '--path.rootfs=/host'
      - '--collector.textfile.directory=/collect'
    network_mode: host
    pid: host
    volumes:
      - '/:/host:ro,rslave'
      - "{{ pi_server_apps_monitoring_node_exporter_collect }}:/collect"

  grafana:
    image: grafana/grafana
    ports:
      - "{{ pi_server_apps_monitoring_grafana_port }}:{{ pi_server_apps_monitoring_grafana_port }}"
    restart: always
    user: "{{ monitoring_user.uid }}:{{ monitoring_user.group }}"
    volumes:
      - "{{ pi_server_apps_monitoring_grafana_config }}:/etc/grafana/grafana.ini:ro"
      - "{{ pi_server_apps_monitoring_grafana_etc }}:/etc/grafana/provisioning:ro"
      - grafana-data:/var/lib/grafana

  alertmanager:
    image: prom/alertmanager
    ports:
      - "{{ pi_server_apps_monitoring_alertmanager_port }}:{{ pi_server_apps_monitoring_alertmanager_port }}"
    restart: always
    volumes:
      - "{{ pi_server_apps_monitoring_alertmanager_config }}:/etc/alertmanager/alertmanager.yml:ro"
      - alertmanager-data:/alertmanager
    extra_hosts:
      - host.docker.internal:host-gateway

volumes:
  prometheus-data:
  grafana-data:
  alertmanager-data:
