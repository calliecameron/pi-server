# MANAGED BY ANSIBLE, CHANGES WILL BE OVERWRITTEN

services:
  prometheus:
    image: "prom/prometheus:{{ pi_server_apps_monitoring_prometheus_version }}"
    restart: always
    user: "{{ prometheus_user.uid }}:{{ prometheus_user.group }}"
    group_add:
      # Data directory is group-writable by this group
      - 65534
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--web.external-url=http://{{ pi_server_lan_ip }}:{{ pi_server_monitoring_entrypoint_port }}/prometheus"
      - "--web.page-title=Prometheus | {{ pi_server_hostname }}"
      - "--web.listen-address=0.0.0.0:{{ pi_server_apps_monitoring_prometheus_port }}"
    volumes:
      - "{{ pi_server_apps_monitoring_prometheus_config }}:/etc/prometheus/prometheus.yml:ro"
      - "{{ pi_server_apps_monitoring_prometheus_scrapes }}:/scrapes.d:ro"
      - "{{ pi_server_apps_monitoring_prometheus_rules }}:/rules.d:ro"
      - prometheus-data:/prometheus
    extra_hosts:
      - "host.docker.internal:{{ pi_server_apps_monitoring_network_host }}"
    networks:
      - "{{ pi_server_apps_traefik_network }}"
      - "{{ pi_server_apps_monitoring_network }}"
      - "{{ pi_server_apps_monitoring_internal_network }}"
    deploy:
      replicas: 1
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.prometheus.loadbalancer.server.port={{ pi_server_apps_monitoring_prometheus_port }}"
      - "traefik.http.routers.prometheus.entrypoints={{ pi_server_apps_control_panel_entrypoint }}"
      - "traefik.http.routers.prometheus.rule=PathPrefix(`/prometheus`)"

  node_exporter:
    image: "prom/node-exporter:{{ pi_server_apps_monitoring_node_exporter_version }}"
    restart: always
    user: "{{ node_exporter_user.uid }}:{{ node_exporter_user.group }}"
    command:
      - "--path.rootfs=/host"
      - "--collector.textfile.directory=/collect"
      - "--web.listen-address=0.0.0.0:{{ pi_server_apps_monitoring_node_exporter_port }}"
    network_mode: host
    pid: host
    volumes:
      - "/:/host:ro,rslave"
      - "{{ pi_server_apps_monitoring_node_exporter_collect }}:/collect:ro"
    deploy:
      replicas: 1

  grafana:
    image: "grafana/grafana:{{ pi_server_apps_monitoring_grafana_version }}"
    restart: always
    user: "{{ grafana_user.uid }}:{{ grafana_user.group }}"
    volumes:
      - "{{ pi_server_apps_monitoring_grafana_config }}:/etc/grafana/grafana.ini:ro"
      - "{{ pi_server_apps_monitoring_grafana_etc }}:/etc/grafana/provisioning:ro"
      - grafana-data:/var/lib/grafana
    networks:
      - "{{ pi_server_apps_traefik_network }}"
      - "{{ pi_server_apps_monitoring_internal_network }}"
    deploy:
      replicas: 1
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.grafana.loadbalancer.server.port={{ pi_server_apps_monitoring_grafana_port }}"
      - "traefik.http.routers.grafana.entrypoints={{ pi_server_apps_control_panel_entrypoint }}"
      - "traefik.http.routers.grafana.rule=PathPrefix(`/grafana`)"

  alertmanager:
    image: "prom/alertmanager:{{ pi_server_apps_monitoring_alertmanager_version }}"
    restart: always
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
      - "--storage.path=/alertmanager"
      - "--web.external-url=http://{{ pi_server_lan_ip }}:{{ pi_server_monitoring_entrypoint_port }}/alertmanager"
      - "--web.listen-address=0.0.0.0:{{ pi_server_apps_monitoring_alertmanager_port }}"
    volumes:
      - "{{ pi_server_apps_monitoring_alertmanager_config }}:/etc/alertmanager/alertmanager.yml:ro"
      - alertmanager-data:/alertmanager
    networks:
      - "{{ pi_server_apps_traefik_network }}"
      - "{{ pi_server_apps_monitoring_internal_network }}"
    deploy:
      replicas: 1
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.alertmanager.loadbalancer.server.port={{ pi_server_apps_monitoring_alertmanager_port }}"
      - "traefik.http.routers.alertmanager.entrypoints={{ pi_server_apps_control_panel_entrypoint }}"
      - "traefik.http.routers.alertmanager.rule=PathPrefix(`/alertmanager`)"

  cadvisor:
    image: "gcr.io/cadvisor/cadvisor:{{ pi_server_apps_monitoring_cadvisor_version }}"
    restart: always
    command:
      - "--port={{ pi_server_apps_monitoring_cadvisor_port }}"
      - "--url_base_prefix=/cadvisor"
    privileged: true
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
      - "/dev/disk/:/dev/disk:ro"
    devices:
      - "/dev/kmsg:/dev/kmsg"
    networks:
      - "{{ pi_server_apps_traefik_network }}"
      - "{{ pi_server_apps_monitoring_internal_network }}"
    environment:
      CADVISOR_HEALTHCHECK_URL: "http://localhost:{{ pi_server_apps_monitoring_cadvisor_port }}/cadvisor/healthz"
    deploy:
      replicas: 1
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.cadvisor.loadbalancer.server.port={{ pi_server_apps_monitoring_cadvisor_port }}"
      - "traefik.http.routers.cadvisor.entrypoints={{ pi_server_apps_control_panel_entrypoint }}"
      - "traefik.http.routers.cadvisor.rule=PathPrefix(`/cadvisor`)"

  webhook:
    image: "{{ pi_server_apps_monitoring_webhook_image }}"
    restart: always
    user: "{{ webhook_user.uid }}:{{ webhook_user.group }}"
    volumes:
      - "/etc/ssmtp:/etc/ssmtp:ro"
      - "{{ pi_server_apps_email_script }}:/send-email:ro"
      - "/etc/passwd:/etc/passwd:ro"
    networks:
      "{{ pi_server_apps_docker_external_network }}":
        gw_priority: 1
      "{{ pi_server_apps_monitoring_internal_network }}": {}
    deploy:
      replicas: 1

volumes:
  prometheus-data:
  grafana-data:
  alertmanager-data:

networks:
  "{{ pi_server_apps_docker_external_network }}":
    external: true
  "{{ pi_server_apps_traefik_network }}":
    external: true
  "{{ pi_server_apps_monitoring_network }}":
    external: true
  "{{ pi_server_apps_monitoring_internal_network }}":
    driver: bridge
    internal: true
