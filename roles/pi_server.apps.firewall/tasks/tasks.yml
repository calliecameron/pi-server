- include_role:
    name: pi_server.base

- name: before.rules
  become: yes
  ansible.builtin.copy:
    src: before.rules
    dest: /etc/ufw/before.rules
    owner: root
    group: root
    mode: u=rw,g=r,o=
  notify: reload firewall

- name: before6.rules
  become: yes
  ansible.builtin.copy:
    src: before6.rules
    dest: /etc/ufw/before6.rules
    owner: root
    group: root
    mode: u=rw,g=r,o=
  notify: reload firewall

- name: after.rules dir
  become: yes
  ansible.builtin.file:
    path: "{{ pi_server_apps_firewall_after_rules }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,g=rx,o=
  notify: reload firewall

- name: after.rules
  become: yes
  ansible.builtin.copy:
    src: after.rules
    dest: "{{ pi_server_apps_firewall_after_rules }}/00_default.rules"
    owner: root
    group: root
    mode: u=rw,g=r,o=
  notify: reload firewall

- name: assemble after.rules
  become: yes
  ansible.builtin.assemble:
    src: "{{ pi_server_apps_firewall_after_rules }}"
    dest: /etc/ufw/after.rules
    owner: root
    group: root
    mode: u=rw,g=r,o=
  notify: reload firewall

- name: after6.rules
  become: yes
  ansible.builtin.copy:
    src: after6.rules
    dest: /etc/ufw/after6.rules
    owner: root
    group: root
    mode: u=rw,g=r,o=
  notify: reload firewall

- name: default incoming
  become: yes
  community.general.ufw:
    default: deny
    direction: incoming
  notify: reload firewall

- name: default outgoing
  become: yes
  community.general.ufw:
    default: allow
    direction: outgoing
  notify: reload firewall

- name: allow ssh
  become: yes
  community.general.ufw:
    port: 22
    proto: tcp
    rule: allow
  notify: reload firewall
