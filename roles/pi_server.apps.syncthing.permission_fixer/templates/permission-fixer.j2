#!/bin/bash
# MANAGED BY ANSIBLE, CHANGES WILL BE OVERWRITTEN
# Fix file permissions in syncthing.

set -eu

{{ cron_wrapper_line }}

DATA_DIR='{{ pi_server_apps_main_data_data_dir }}'
NO_BACKUP_DIR='{{ pi_server_apps_main_data_no_backup_dir }}'
OUTPUT_DIR='{{ pi_server_apps_monitoring_node_exporter_collect }}'
OUTPUT_FILE="${OUTPUT_DIR}/syncthing-permissions.prom"
TMP_FILE="${OUTPUT_FILE}.tmp"

function warning() {
    echo 'WARNING:' "${@}"
}

function error() {
    echo 'ERROR:' "${@}"
    exit 1
}

COUNT=0

function do-dir() {
    local DIR="${1}"
    local FULL_PATH
    while read -r line; do
        FULL_PATH="$(readlink -f "${line}")"
        if chmod go-rwx "${FULL_PATH}"; then
            echo "Fixed file '${FULL_PATH}'"
        else
            error "failed to fix file '${FULL_PATH}'"
        fi
        COUNT=$((COUNT + 1))
    done < <(find "${DIR}" -perm '/077')
}

do-dir "${DATA_DIR}"
do-dir "${NO_BACKUP_DIR}"

echo "Fixed ${COUNT} file(s)"

if printf "syncthing_permissions_fixed{job=\"syncthing-permissions\"} %s\n" "${COUNT}" >"${TMP_FILE}"; then
    echo "Wrote to '${TMP_FILE}'"
else
    warning "failed to write to '${TMP_FILE}'"
fi

if mv "${TMP_FILE}" "${OUTPUT_FILE}"; then
    echo "wrote metrics to '${OUTPUT_FILE}'"
else
    warning "failed to write to '${OUTPUT_FILE}'"
fi
