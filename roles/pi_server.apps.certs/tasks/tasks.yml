- include_role:
    name: pi_server.apps.cron

- include_role:
    name: pi_server.apps.monitoring

- name: etc dir
  become: yes
  ansible.builtin.file:
    path: "{{ pi_server_apps_certs_etc }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,go=rx

- name: user
  include_role:
    name: pi_server.utils.user
  vars:
    user: "{{ pi_server_apps_certs_user }}"
    register:

- name: https key readers group
  become: yes
  ansible.builtin.group:
    name: "{{ pi_server_apps_certs_https_key_readers_group }}"

- name: deployment key readers group
  become: yes
  ansible.builtin.group:
    name: "{{ pi_server_apps_certs_deployment_key_readers_group }}"

- name: check that ca cert exists
  include_role:
    name: pi_server.utils.require_file
  vars:
    path: "{{ pi_server_apps_certs_ca }}"
    msg: "CA cert ({{ pi_server_apps_certs_ca }}) doesn't exist"

- name: check that crl exists
  include_role:
    name: pi_server.utils.require_file
  vars:
    path: "{{ pi_server_apps_certs_crl }}"
    msg: "CRL ({{ pi_server_apps_certs_crl }}) doesn't exist"

- name: check that https cert exists
  include_role:
    name: pi_server.utils.require_file
  vars:
    path: "{{ pi_server_apps_certs_https_cert }}"
    msg: "HTTPS cert ({{ pi_server_apps_certs_https_cert }}) doesn't exist"

- name: check that https key exists
  include_role:
    name: pi_server.utils.require_file
  vars:
    path: "{{ pi_server_apps_certs_https_key }}"
    msg: "HTTPS key ({{ pi_server_apps_certs_https_key }}) doesn't exist"

- name: check that deployment public key exists
  include_role:
    name: pi_server.utils.require_file
  vars:
    path: "{{ pi_server_apps_certs_deployment_key_pub }}"
    msg: "deployment public key ({{ pi_server_apps_certs_deployment_key_pub }}) doesn't exist"

- name: check that deployment key exists
  include_role:
    name: pi_server.utils.require_file
  vars:
    path: "{{ pi_server_apps_certs_deployment_key }}"
    msg: "deployment key ({{ pi_server_apps_certs_deployment_key }}) doesn't exist"

- name: ca cert
  become: yes
  ansible.builtin.file:
    path: "{{ pi_server_apps_certs_ca }}"
    owner: root
    group: root
    mode: a=r

- name: crl
  become: yes
  ansible.builtin.file:
    path: "{{ pi_server_apps_certs_crl }}"
    owner: root
    group: root
    mode: a=r

- name: https cert
  become: yes
  ansible.builtin.file:
    path: "{{ pi_server_apps_certs_https_cert }}"
    owner: root
    group: root
    mode: a=r

- name: https key
  become: yes
  ansible.builtin.file:
    path: "{{ pi_server_apps_certs_https_key }}"
    owner: root
    group: "{{ pi_server_apps_certs_https_key_readers_group }}"
    mode: ug=r,o=

- name: deployment public key
  become: yes
  ansible.builtin.file:
    path: "{{ pi_server_apps_certs_deployment_key_pub }}"
    owner: root
    group: root
    mode: a=r

- name: deployment key
  become: yes
  ansible.builtin.file:
    path: "{{ pi_server_apps_certs_deployment_key }}"
    owner: root
    group: "{{ pi_server_apps_certs_deployment_key_readers_group }}"
    mode: ug=r,o=

- name: copy ca cert
  become: yes
  ansible.builtin.copy:
    remote_src: yes
    src: "{{ pi_server_apps_certs_ca }}"
    dest: /usr/local/share/ca-certificates/ca.crt
    owner: root
    group: root
    mode: a=r
  notify: reload ca cert

- name: ca cert in control panel
  include_role:
    name: pi_server.apps.control_panel.asset
  vars:
    src: "{{ pi_server_apps_certs_ca }}"
    remote_src: yes
    dest: ca.crt

- name: control panel fragment
  include_role:
    name: pi_server.apps.control_panel.fragment
  vars:
    src: fragment.html.j2
    name: certs

- name: cronjob
  include_role:
    name: pi_server.apps.cron.cronjob
  vars:
    job: certs
    src: certs.j2
    user: "{{ pi_server_apps_certs_user }}"
    systemd_conflicts: []
    docker_conflicts: []

- name: dashboard
  include_role:
    name: pi_server.apps.monitoring.custom_dashboard
  vars:
    src: certs.json

- name: alerts
  include_role:
    name: pi_server.apps.monitoring.custom_alerts
  vars:
    src: certs-alerts-custom.yml
    job: certs
