- name: Dependency
  ansible.builtin.include_role:
    name: pi_server.apps.control_panel

- name: Dependency
  ansible.builtin.include_role:
    name: pi_server.apps.traefik

- name: Etc dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_shutdownd_etc }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,go=rx

- name: UI dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_shutdownd_ui_dir }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,go=rx

- name: UI templates dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_shutdownd_ui_templates_dir }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,go=rx

- name: Var dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_shutdownd_var }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,go=rx

- name: Main user
  ansible.builtin.include_role:
    name: pi_server.utils.user
  vars:
    user: "{{ pi_server_apps_shutdownd_user }}"
    register:

- name: Sudoers
  ansible.builtin.include_role:
    name: pi_server.utils.sudoers_fragment
  vars:
    src: sudoers.j2
    name: "{{ pi_server_apps_shutdownd_user }}"

- name: Writers group
  become: true
  ansible.builtin.group:
    name: "{{ pi_server_apps_shutdownd_writers_group }}"
  register: writers_group

- name: UI user
  ansible.builtin.include_role:
    name: pi_server.utils.user
  vars:
    user: "{{ pi_server_apps_shutdownd_ui_user }}"
    register: ui_user

- name: UI user in writers group
  become: true
  ansible.builtin.user:
    name: "{{ pi_server_apps_shutdownd_ui_user }}"
    groups:
      - "{{ pi_server_apps_shutdownd_writers_group }}"
    append: true
    create_home: false

- name: Command file
  ansible.builtin.include_role:
    name: pi_server.utils.create_file
  vars:
    path: "{{ pi_server_apps_shutdownd_command_file }}"
    owner: "{{ pi_server_apps_shutdownd_user }}"
    group: "{{ pi_server_apps_shutdownd_writers_group }}"
    mode: ug=rw,o=r

- name: Inotify
  become: true
  ansible.builtin.package:
    name: inotify-tools
    state: present

- name: Main script
  become: true
  ansible.builtin.template:
    src: shutdownd.j2
    dest: "{{ pi_server_apps_shutdownd_script }}"
    owner: root
    group: root
    mode: a=rx
  notify: Reload shutdownd

- name: Systemd service
  ansible.builtin.include_role:
    name: pi_server.utils.systemd_service
  vars:
    src: service.j2
    service: "{{ pi_server_apps_shutdownd_service }}"
    enabled: true

- name: Monitor main service
  ansible.builtin.include_role:
    name: pi_server.apps.monitoring.monitor_systemd_service
  vars:
    systemd_service: "{{ pi_server_apps_shutdownd_service }}"

- name: UI script
  become: true
  ansible.builtin.copy:
    src: shutdownd-ui
    dest: "{{ pi_server_apps_shutdownd_ui_script }}"
    owner: root
    group: root
    mode: a=rx
  notify: Reload shutdownd ui

- name: Bootstrap templates
  ansible.builtin.include_role:
    name: pi_server.utils.bootstrap_templates
  vars:
    dest_dir: "{{ pi_server_apps_shutdownd_ui_templates_dir }}"
    head_title: "#####1##### | {{ pi_server_hostname }}"
    body_title: "{{ pi_server_hostname }}"
    fragments_notify: "Reload shutdownd ui"

- name: UI dockerfile
  become: true
  ansible.builtin.template:
    src: ui-dockerfile.j2
    dest: "{{ pi_server_apps_shutdownd_ui_dir }}/Dockerfile"
    owner: root
    group: root
    mode: a=r

- name: UI docker compose file
  become: true
  ansible.builtin.template:
    src: ui-docker-compose.yml.j2
    dest: "{{ pi_server_apps_shutdownd_ui_docker_compose }}"
    owner: root
    group: root
    mode: a=r
  notify: Reload shutdownd ui

- name: Build UI image
  ansible.builtin.include_role:
    name: pi_server.apps.docker.build
  vars:
    name: "{{ pi_server_apps_shutdownd_ui_image }}"
    dir: "{{ pi_server_apps_shutdownd_ui_dir }}"
    notify: Reload shutdownd ui

- name: Compose
  ansible.builtin.include_tasks: compose.yml
  vars:
    restart: false

- name: Monitor containers
  ansible.builtin.include_role:
    name: pi_server.apps.monitoring.monitor_docker_compose
  vars:
    compose_file: "{{ pi_server_apps_shutdownd_ui_docker_compose }}"

- name: Pause UI on cron
  ansible.builtin.include_role:
    name: pi_server.apps.cron.pause_docker_on_cron
  vars:
    compose_file: "{{ pi_server_apps_shutdownd_ui_docker_compose }}"
    service: ui

- name: Control panel links
  ansible.builtin.include_role:
    name: pi_server.apps.control_panel.fragment
  vars:
    src: fragment.html.j2
    name: zz-shutdownd
