- name: dependency
  ansible.builtin.include_role:
    name: pi_server.apps.main_storage

- name: user
  ansible.builtin.include_role:
    name: pi_server.utils.user
  vars:
    user: "{{ pi_server_apps_main_data_user }}"
    register:

- name: data dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_main_data_dir }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,go=rx

- name: config dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_main_data_config_dir }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,go=rx

- name: backed-up data dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_main_data_main_dir }}"
    state: directory
    owner: "{{ pi_server_apps_main_data_user }}"
    group: "{{ pi_server_apps_main_data_user }}"
    mode: u=rwx,go=

- name: non-backed-up data dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_main_data_no_backup_dir }}"
    state: directory
    owner: "{{ pi_server_apps_main_data_user }}"
    group: "{{ pi_server_apps_main_data_user }}"
    mode: u=rwx,go=

- name: scratch dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_main_data_scratch_dir }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: u=rwx,go=

- name: mount backup partition
  become: true
  ansible.builtin.command:
    cmd: "mount '{{ pi_server_apps_main_storage_backup_mount_dir }}'"
  changed_when: false

- name: backup dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_main_data_backup_dir }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,go=rx

- name: unmount backup partition
  become: true
  ansible.builtin.command:
    cmd: "umount '{{ pi_server_apps_main_storage_backup_mount_dir }}'"
  changed_when: false
