- name: Dependency
  ansible.builtin.include_role:
    name: pi_server.apps.traefik

- name: Dependency
  ansible.builtin.include_role:
    name: pi_server.apps.main_data

- name: Install minidlna
  become: true
  ansible.builtin.package:
    name: minidlna
    state: present

- name: Media dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_minidlna_media_dir }}"
    state: directory
    owner: "{{ pi_server_apps_main_data_user }}"
    group: "{{ pi_server_apps_main_data_user }}"
    mode: u=rwx,go=

- name: Config dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_minidlna_config_dir }}"
    state: directory
    owner: "{{ pi_server_apps_main_data_user }}"
    group: "{{ pi_server_apps_main_data_user }}"
    mode: u=rwx,go=

- name: DB dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_minidlna_db_dir }}"
    state: directory
    owner: "{{ pi_server_apps_main_data_user }}"
    group: "{{ pi_server_apps_main_data_user }}"
    mode: u=rwx,go=

- name: Systemd user
  become: true
  ansible.builtin.lineinfile:
    path: /lib/systemd/system/minidlna.service
    line: "User={{ pi_server_apps_main_data_user }}"
    regexp: "^User=minidlna$"
  notify: Reload minidlna

- name: Systemd group
  become: true
  ansible.builtin.lineinfile:
    path: /lib/systemd/system/minidlna.service
    line: "Group={{ pi_server_apps_main_data_user }}"
    regexp: "^Group=minidlna$"
  notify: Reload minidlna

- name: Logrotate config
  become: true
  ansible.builtin.lineinfile:
    path: /etc/logrotate.d/minidlna
    line: "\tcreate 0644 {{ pi_server_apps_main_data_user }} {{ pi_server_apps_main_data_user }}"
    regexp: "\tcreate 0644"
  notify: Reload minidlna

- name: Config
  become: true
  ansible.builtin.template:
    src: minidlna.conf.j2
    dest: /etc/minidlna.conf
    owner: root
    group: root
    mode: a=r
  notify: Reload minidlna

- name: Overrides
  ansible.builtin.include_role:
    name: pi_server.utils.systemd_service_overrides
  vars:
    src: minidlna-overrides.j2
    service: "{{ pi_server_apps_minidlna_service }}"
    enabled: true

- name: Monitoring
  ansible.builtin.include_role:
    name: pi_server.apps.monitoring.monitor_systemd_service
  vars:
    systemd_service: "{{ pi_server_apps_minidlna_service }}"

- name: Pause on cron
  ansible.builtin.include_role:
    name: pi_server.apps.cron.pause_systemd_on_cron
  vars:
    service: "{{ pi_server_apps_minidlna_service }}"

- name: Expose to traefik network
  ansible.builtin.include_role:
    name: pi_server.apps.traefik.open_host_port_to_containers
  vars:
    port: "{{ pi_server_apps_minidlna_http_port }}"

- name: Add to traefik
  ansible.builtin.include_role:
    name: pi_server.apps.traefik.http_host_service
  vars:
    name: minidlna-web
    entrypoint: "{{ pi_server_apps_control_panel_entrypoint }}"
    path_prefix: "minidlna"
    strip_prefix: true
    port: "{{ pi_server_apps_minidlna_http_port }}"
    https: false

- name: Control panel fragment
  ansible.builtin.include_role:
    name: pi_server.apps.control_panel.fragment
  vars:
    src: fragment.html.j2
    name: mediaserver

- name: DLNA port
  ansible.builtin.include_role:
    name: pi_server.apps.firewall.udp_port
  vars:
    port: "{{ pi_server_apps_minidlna_port }}"
