- name: dependency
  ansible.builtin.include_role:
    name: pi_server.apps.traefik

- name: dependency
  ansible.builtin.include_role:
    name: pi_server.apps.main_data

- name: install minidlna
  become: true
  ansible.builtin.package:
    name: minidlna
    state: present

- name: media dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_minidlna_media_dir }}"
    state: directory
    owner: "{{ pi_server_apps_main_data_user }}"
    group: "{{ pi_server_apps_main_data_user }}"
    mode: u=rwx,go=

- name: config dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_minidlna_config_dir }}"
    state: directory
    owner: "{{ pi_server_apps_main_data_user }}"
    group: "{{ pi_server_apps_main_data_user }}"
    mode: u=rwx,go=

- name: db dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_minidlna_db_dir }}"
    state: directory
    owner: "{{ pi_server_apps_main_data_user }}"
    group: "{{ pi_server_apps_main_data_user }}"
    mode: u=rwx,go=

- name: systemd user
  become: true
  ansible.builtin.lineinfile:
    path: /lib/systemd/system/minidlna.service
    line: "User={{ pi_server_apps_main_data_user }}"
    regexp: "^User=minidlna$"
  notify: reload minidlna

- name: systemd group
  become: true
  ansible.builtin.lineinfile:
    path: /lib/systemd/system/minidlna.service
    line: "Group={{ pi_server_apps_main_data_user }}"
    regexp: "^Group=minidlna$"
  notify: reload minidlna

- name: config
  become: true
  ansible.builtin.template:
    src: minidlna.conf.j2
    dest: /etc/minidlna.conf
    owner: root
    group: root
    mode: a=r
  notify: reload minidlna

- name: overrides dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_minidlna_overrides_dir }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,go=rx

- name: overrides
  become: true
  ansible.builtin.template:
    src: minidlna-overrides.conf.j2
    dest: "{{ pi_server_apps_minidlna_overrides }}"
    owner: root
    group: root
    mode: a=r
  notify: reload minidlna

- name: monitoring
  ansible.builtin.include_role:
    name: pi_server.apps.monitoring.monitor_systemd_service
  vars:
    systemd_service: "{{ pi_server_apps_minidlna_service }}"

- name: pause on cron
  ansible.builtin.include_role:
    name: pi_server.apps.cron.pause_systemd_on_cron
  vars:
    service: "{{ pi_server_apps_minidlna_service }}"

- name: expose to traefik network
  ansible.builtin.include_role:
    name: pi_server.apps.traefik.open_host_port_to_containers
  vars:
    port: "{{ pi_server_apps_minidlna_http_port }}"

- name: add to traefik
  ansible.builtin.include_role:
    name: pi_server.apps.traefik.http_host_service
  vars:
    name: minidlna-web
    entrypoint: "{{ pi_server_apps_control_panel_entrypoint }}"
    path_prefix: "minidlna"
    strip_prefix: true
    port: "{{ pi_server_apps_minidlna_http_port }}"
    https: false

- name: control panel fragment
  ansible.builtin.include_role:
    name: pi_server.apps.control_panel.fragment
  vars:
    src: fragment.html.j2
    name: minidlna

- name: dlna port
  ansible.builtin.include_role:
    name: pi_server.apps.firewall.udp_port
  vars:
    port: "{{ pi_server_apps_minidlna_port }}"
