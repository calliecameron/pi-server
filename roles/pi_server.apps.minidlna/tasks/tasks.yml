- name: Dependency
  ansible.builtin.include_role:
    name: pi_server.apps.traefik

- name: Dependency
  ansible.builtin.include_role:
    name: pi_server.apps.main_data

- name: Etc dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_minidlna_etc }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,go=rx

- name: Config
  become: true
  ansible.builtin.template:
    src: minidlna.conf.j2
    dest: "{{ pi_server_apps_minidlna_config }}"
    owner: root
    group: root
    mode: a=r

- name: Docker dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_minidlna_docker_dir }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,go=rx

- name: Dockerfile
  become: true
  ansible.builtin.template:
    src: dockerfile.j2
    dest: "{{ pi_server_apps_minidlna_docker_dir }}/Dockerfile"
    owner: root
    group: root
    mode: a=r

- name: Docker compose file
  become: true
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ pi_server_apps_minidlna_docker_compose }}"
    owner: root
    group: root
    mode: a=r
  notify: Reload minidlna

- name: Build image
  ansible.builtin.include_role:
    name: pi_server.apps.docker.build
  vars:
    name: "{{ pi_server_apps_minidlna_image }}"
    dir: "{{ pi_server_apps_minidlna_docker_dir }}"
    notify: Reload minidlna

- name: Compose
  ansible.builtin.include_tasks: compose.yml
  vars:
    restart: false

- name: Monitor containers
  ansible.builtin.include_role:
    name: pi_server.apps.monitoring.monitor_docker_compose
  vars:
    compose_file: "{{ pi_server_apps_minidlna_docker_compose }}"

- name: Pause on cron
  ansible.builtin.include_role:
    name: pi_server.apps.cron.pause_docker_on_cron
  vars:
    compose_file: "{{ pi_server_apps_minidlna_docker_compose }}"
    service: minidlna

- name: Expose to traefik network
  ansible.builtin.include_role:
    name: pi_server.apps.traefik.open_host_port_to_containers
  vars:
    port: "{{ pi_server_apps_minidlna_http_port }}"

- name: Add to traefik
  ansible.builtin.include_role:
    name: pi_server.apps.traefik.http_host_service
  vars:
    name: minidlna-web
    entrypoint: "{{ pi_server_apps_control_panel_entrypoint }}"
    path_prefix: "minidlna"
    strip_prefix: true
    port: "{{ pi_server_apps_minidlna_http_port }}"
    https: false
    https_entrypoint:

- name: Control panel fragment
  ansible.builtin.include_role:
    name: pi_server.apps.control_panel.fragment
  vars:
    src: fragment.html.j2
    name: mediaserver

- name: DLNA port
  ansible.builtin.include_role:
    name: pi_server.apps.firewall.udp_port
  vars:
    port: "{{ pi_server_apps_minidlna_port }}"

# Note that this needs to be externally visible, despite being served through
# traefik on the control panel, otherwise DLNA clients can't connect.
- name: HTTP port
  ansible.builtin.include_role:
    name: pi_server.apps.firewall.tcp_port
  vars:
    port: "{{ pi_server_apps_minidlna_http_port }}"
