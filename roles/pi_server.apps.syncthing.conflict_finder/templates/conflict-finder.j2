#!/bin/bash
# MANAGED BY ANSIBLE, CHANGES WILL BE OVERWRITTEN
# Find conflicting files in syncting.

set -eu

{{ cron_wrapper_line }}

DATA_DIR='{{ pi_server_apps_main_data_data_dir }}'
NO_BACKUP_DIR='{{ pi_server_apps_main_data_no_backup_dir }}'
OUTPUT_DIR='{{ pi_server_apps_monitoring_node_exporter_collect }}'
OUTPUT_FILE="${OUTPUT_DIR}/syncthing-conflicts.prom"
TMP_FILE="${OUTPUT_FILE}.tmp"

function warning() {
    echo 'WARNING:' "${@}"
}

COUNT=0

function do-dir() {
    local DIR="${1}"
    while read -r line; do
        echo "Found conflicting file '$(readlink -f "${line}")'"
        COUNT=$((COUNT + 1))
    done < <(find "${DIR}" -name '*.sync-conflict*')
}

do-dir "${DATA_DIR}"
do-dir "${NO_BACKUP_DIR}"

echo "Found ${COUNT} conflicting file(s)"

if printf "syncthing_conflicts{job=\"syncthing-conflicts\"} %s\n" "${COUNT}" >"${TMP_FILE}"; then
    echo "Wrote to '${TMP_FILE}'"
else
    warning "failed to write to '${TMP_FILE}'"
fi

if mv "${TMP_FILE}" "${OUTPUT_FILE}"; then
    echo "wrote metrics to '${OUTPUT_FILE}'"
else
    warning "failed to write to '${OUTPUT_FILE}'"
fi
