#!/bin/bash
# MANAGED BY ANSIBLE, CHANGES WILL BE OVERWRITTEN

set -eu

function error() {
    echo "ERROR:" "${@}"
    exit 1
}

function scrape() {
    local OUTPUT_DIR='{{ pi_server_apps_monitoring_node_exporter_collect }}'
    local OUTPUT_FILE="${OUTPUT_DIR}/zfs-exporter.prom"
    local TMP_FILE="${OUTPUT_FILE}.tmp"
    if ! : >"${TMP_FILE}"; then
        error "failed to initialize '${TMP_FILE}'"
    fi

    zpool list -H -o name,health | while read -r name state; do
        if ! echo "zfs_zpool_state{job=\"zfs\", zpool=\"${name}\", state=\"${state}\"} 1" >>"${TMP_FILE}"; then
            error "failed to write state for '${name}' to '${TMP_FILE}'"
        fi
    done

    zfs list -H -p -t snapshot -o name,creation | while IFS=$'@\t ' read -r dataset snapshot timestamp; do
        if ! echo "zfs_snapshot_time{job=\"zfs\", dataset=\"${dataset}\", snapshot=\"${snapshot}\"} ${timestamp}" >>"${TMP_FILE}"; then
            error "failed to write snapshot time for '${dataset},${snapshot}' to '${TMP_FILE}'"
        fi
    done

    if mv "${TMP_FILE}" "${OUTPUT_FILE}"; then
        echo "wrote metrics to '${OUTPUT_FILE}'"
    else
        error "failed to write to '${OUTPUT_FILE}'"
    fi
}

scrape

while true; do
    sleep 5m
    scrape
done
