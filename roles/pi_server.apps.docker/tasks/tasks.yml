- name: Dependency
  ansible.builtin.include_role:
    name: pi_server.apps.firewall

- name: Install docker
  become: true
  ansible.builtin.package:
    name: docker.io
    state: present

- name: "Ensure handlers are notified now to avoid firewall conflicts"
  ansible.builtin.meta: flush_handlers

- name: Daemon.json
  become: true
  ansible.builtin.template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: u=rw,go=r
  notify: Reload docker

- name: Install pip
  become: true
  ansible.builtin.package:
    name: python3-pip
    state: present

- name: Install compose
  become: true
  ansible.builtin.pip:
    name: docker-compose
    umask: "0022"
    version: "{{ pi_server_apps_docker_compose_version }}"

- name: Install python SDK
  become: true
  ansible.builtin.pip:
    name: docker
    umask: "0022"
    version: "{{ pi_server_apps_docker_python_sdk_version }}"

- name: Scrape docker metrics
  ansible.builtin.include_role:
    name: pi_server.apps.monitoring.scrape_job
  vars:
    job: docker
    host: host.docker.internal
    port: "{{ pi_server_apps_docker_metrics_port }}"
    metrics_path: /metrics

- name: Monitor docker
  ansible.builtin.include_role:
    name: pi_server.apps.monitoring.monitor_systemd_service
  vars:
    systemd_service: docker

- name: Expose docker metrics to traefik network
  ansible.builtin.include_role:
    name: pi_server.apps.traefik.open_host_port_to_containers
  vars:
    port: "{{ pi_server_apps_docker_metrics_port }}"

- name: Refresh facts
  become: true
  ansible.builtin.setup:
