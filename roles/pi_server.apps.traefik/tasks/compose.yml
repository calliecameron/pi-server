- name: Assemble entrypoints file
  become: true
  ansible.builtin.assemble:
    src: "{{ pi_server_apps_traefik_entrypoints_dir }}"
    dest: "{{ pi_server_apps_traefik_entrypoints_file }}"
    owner: root
    group: root
    mode: a=r

- name: Get entrypoints
  become: true
  ansible.builtin.command:
    cmd: "cat '{{ pi_server_apps_traefik_entrypoints_file }}'"
  register: raw_entrypoints
  changed_when: false

- name: Config file
  become: true
  ansible.builtin.template:
    src: traefik.yml.j2
    dest: "{{ pi_server_apps_traefik_config }}"
    owner: root
    group: root
    mode: a=r
  vars:
    entrypoint_lines: "{{ raw_entrypoints.stdout_lines }}"

- name: Get ports
  become: true
  ansible.builtin.command:
    cmd: "cat '{{ pi_server_apps_traefik_ports_file }}'"
  register: raw_ports
  changed_when: false

- name: Compose file
  become: true
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ pi_server_apps_traefik_docker_compose }}"
    owner: root
    group: root
    mode: a=r
  vars:
    ports: "{{ raw_ports.stdout_lines }}"

# We need two calls to compose because either or both of the config and compose
# files could have changed when called through a handler:
#   - 'present' on its own wouldn't pick up config file changes that need a
#     restart if the compose file hadn't changed
#   - 'restart' on its own wouldn't pick up compose file changes
- name: Docker compose up
  become: true
  community.docker.docker_compose_v2:
    project_src: "{{ pi_server_apps_traefik_etc }}"
    remove_orphans: true
    state: present

- name: Docker compose restart
  become: true
  community.docker.docker_compose_v2:
    project_src: "{{ pi_server_apps_traefik_etc }}"
    remove_orphans: true
    state: restarted
  when: restart
