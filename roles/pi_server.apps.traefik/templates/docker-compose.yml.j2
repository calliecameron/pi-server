# MANAGED BY ANSIBLE, CHANGES WILL BE OVERWRITTEN

services:
  traefik_docker_proxy:
    image: "tecnativa/docker-socket-proxy:{{ pi_server_apps_traefik_docker_proxy_version }}"
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik_docker_proxy
    environment:
      CONTAINERS: 1
    deploy:
      replicas: 1

  traefik:
    image: "traefik:{{ pi_server_apps_traefik_version }}"
    restart: always
    user: "{{ traefik_user.uid }}:{{ traefik_user.group }}"
{% if pi_server_apps_traefik_https_enabled %}
    group_add:
      - "{{ pi_server_apps_certs_https_key_readers_group_gid }}"
{% endif %}
    volumes:
      - "{{ pi_server_apps_traefik_config }}:/etc/traefik/traefik.yml:ro"
      - "{{ pi_server_apps_traefik_discovery_dir }}:/etc/traefik/discovery.d:ro"
{% if pi_server_apps_traefik_https_enabled %}
      - "{{ pi_server_apps_certs_https_cert }}:{{ pi_server_apps_traefik_https_cert_mount_point }}"
      - "{{ pi_server_apps_certs_https_key }}:{{ pi_server_apps_traefik_https_key_mount_point }}"
{% endif %}
{% if ports %}
    ports:
{% for port in ports %}
      - "{{ port }}"
{% endfor %}
{% endif %}
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      - "{{ pi_server_apps_traefik_network }}"
      - traefik_docker_proxy
    deploy:
      replicas: 1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.entrypoints={{ pi_server_apps_control_panel_entrypoint }}"
      - "traefik.http.routers.dashboard.rule=PathPrefix(`/traefik`)"
      - "traefik.http.routers.dashboard.service=api@internal"

networks:
  traefik_docker_proxy:
    driver: bridge
    internal: true
  "{{ pi_server_apps_traefik_network}}":
    external: true
