- name: Dependency
  ansible.builtin.include_role:
    name: pi_server.apps.main_data

- name: Dependency
  ansible.builtin.include_role:
    name: pi_server.apps.certs

- name: Dependency
  ansible.builtin.include_role:
    name: pi_server.apps.syncthing.system_wide

- name: Etc dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_backup_etc }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,go=rx

- name: Config dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_backup_config_dir }}"
    state: directory
    owner: "{{ pi_server_apps_main_data_user }}"
    group: "{{ pi_server_apps_main_data_user }}"
    mode: u=rwx,go=

- name: Instructions
  become: true
  ansible.builtin.copy:
    src: instructions.txt
    dest: "{{ pi_server_apps_backup_config_dir }}/instructions.txt"
    owner: "{{ pi_server_apps_main_data_user }}"
    group: "{{ pi_server_apps_main_data_user }}"
    mode: u=r,go=

- name: Git configuration file
  ansible.builtin.include_role:
    name: pi_server.utils.create_file
  vars:
    path: "{{ pi_server_apps_backup_git_config }}"
    owner: "{{ pi_server_apps_main_data_user }}"
    group: "{{ pi_server_apps_main_data_user }}"
    mode: u=rw,go=

- name: Git backup dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_backup_git_dir }}"
    state: directory
    owner: "{{ pi_server_apps_main_data_user }}"
    group: "{{ pi_server_apps_main_data_user }}"
    mode: u=rwx,go=

- name: Git ssh
  become: true
  ansible.builtin.template:
    src: git-ssh.j2
    dest: "{{ pi_server_apps_backup_git_ssh }}"
    owner: root
    group: root
    mode: a=rx

- name: Git user can read deployment key
  ansible.builtin.include_role:
    name: pi_server.apps.certs.deployment_key_reader
  vars:
    user: "{{ pi_server_apps_main_data_user }}"

- name: Git cronjob
  ansible.builtin.include_role:
    name: pi_server.apps.cron.cronjob
  vars:
    job: backup-git
    src: backup-git.j2
    user: "{{ pi_server_apps_main_data_user }}"
    systemd_conflicts: []
    docker_conflicts: []
    systemd_overrides:
      - "[Service]"
      - "ReadOnlyPaths={{ pi_server_apps_main_storage_data_dir }}"
      - "ReadWritePaths={{ pi_server_apps_backup_git_dir }}"

- name: Install bzip2
  become: true
  ansible.builtin.package:
    name: bzip2
    state: present

- name: Download restic
  become: true
  ansible.builtin.get_url:
    url: "{{ pi_server_apps_backup_restic_url_map[ansible_facts['architecture']] }}"
    dest: "{{ pi_server_apps_backup_restic_archive }}"
    checksum: "sha256:{{ pi_server_apps_backup_restic_checksum_map[ansible_facts['architecture']] }}"
    owner: root
    group: root
    mode: a=r

- name: Extract restic
  become: true
  ansible.builtin.command:
    cmd: "bunzip2 --keep {{ pi_server_apps_backup_restic_archive }}"
    creates: "{{ pi_server_apps_backup_restic_bin }}"

- name: Restic mode
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_backup_restic_bin }}"
    state: file
    owner: root
    group: root
    mode: a=rx

- name: Restic config
  become: true
  ansible.builtin.template:
    src: restic.conf.j2
    dest: "{{ pi_server_apps_backup_restic_config }}"
    owner: "{{ pi_server_apps_main_data_user }}"
    group: "{{ pi_server_apps_main_data_user }}"
    mode: u=r,go=

- name: Restic config dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_backup_restic_config_dir }}"
    state: directory
    owner: "{{ pi_server_apps_main_data_user }}"
    group: "{{ pi_server_apps_main_data_user }}"
    mode: u=rwx,go=

- name: Restic cache dir
  become: true
  ansible.builtin.file:
    path: "{{ pi_server_apps_backup_restic_cache }}"
    state: directory
    owner: "{{ pi_server_apps_main_data_user }}"
    group: "{{ pi_server_apps_main_data_user }}"
    mode: u=rwx,go=

- name: Main cronjob
  ansible.builtin.include_role:
    name: pi_server.apps.cron.cronjob
  vars:
    job: backup-main
    src: backup-main.j2
    user: "{{ pi_server_apps_main_data_user }}"
    systemd_conflicts:
      - "{{ pi_server_apps_syncthing_service }}"
    docker_conflicts: []
    systemd_overrides:
      - "[Service]"
      - "ReadOnlyPaths={{ pi_server_apps_main_storage_data_dir }}"
      - "ReadWritePaths={{ pi_server_apps_backup_restic_config_dir }}"
      - "BindReadOnlyPaths={{ pi_server_apps_main_data_data_dir }}:{{ pi_server_apps_backup_mount_dir }}"
