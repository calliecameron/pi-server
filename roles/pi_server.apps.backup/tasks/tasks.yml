- ansible.builtin.include_role:
    name: pi_server.apps.main_data

- ansible.builtin.include_role:
    name: pi_server.apps.certs

- ansible.builtin.include_role:
    name: pi_server.apps.syncthing.system_wide

- name: etc dir
  become: yes
  ansible.builtin.file:
    path: "{{ pi_server_apps_backup_etc }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,go=rx

- name: config dir
  become: yes
  ansible.builtin.file:
    path: "{{ pi_server_apps_backup_config_dir }}"
    state: directory
    owner: "{{ pi_server_apps_main_data_user }}"
    group: "{{ pi_server_apps_main_data_user }}"
    mode: u=rwx,g=rx,o=

- name: instructions
  become: yes
  ansible.builtin.copy:
    src: instructions.txt
    dest: "{{ pi_server_apps_backup_config_dir }}/instructions.txt"
    owner: "{{ pi_server_apps_main_data_user }}"
    group: "{{ pi_server_apps_main_data_user }}"
    mode: ug=r,o=

- name: git configuration file
  ansible.builtin.include_role:
    name: pi_server.utils.create_file
  vars:
    path: "{{ pi_server_apps_backup_git_config }}"
    owner: "{{ pi_server_apps_main_data_user }}"
    group: "{{ pi_server_apps_main_data_user }}"
    mode: u=rw,g=r,o=

- name: main user
  ansible.builtin.include_role:
    name: pi_server.utils.user
  vars:
    user: "{{ pi_server_apps_backup_main_user }}"
    register:

- name: git user
  ansible.builtin.include_role:
    name: pi_server.utils.user
  vars:
    user: "{{ pi_server_apps_backup_git_user }}"
    register:

- name: git user can read data
  ansible.builtin.include_role:
    name: pi_server.apps.main_data.reader
  vars:
    user: "{{ pi_server_apps_backup_git_user }}"

- name: git user can read deployment key
  ansible.builtin.include_role:
    name: pi_server.apps.certs.deployment_key_reader
  vars:
    user: "{{ pi_server_apps_backup_git_user }}"

- name: mount backup partition
  become: yes
  ansible.builtin.command:
    cmd: "mount '{{ pi_server_apps_main_storage_backup_mount_dir }}'"
  changed_when: false

- name: main backup dir
  become: yes
  ansible.builtin.file:
    path: "{{ pi_server_apps_backup_main_dir }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,go=

- name: git backup dir
  become: yes
  ansible.builtin.file:
    path: "{{ pi_server_apps_backup_git_dir }}"
    state: directory
    owner: "{{ pi_server_apps_backup_git_user }}"
    group: "{{ pi_server_apps_backup_git_user }}"
    mode: u=rwx,go=

- name: last run date file
  ansible.builtin.include_role:
    name: pi_server.utils.create_file
  vars:
    path: "{{ pi_server_apps_backup_last_run }}"
    owner: "{{ pi_server_apps_backup_main_user }}"
    group: "{{ pi_server_apps_backup_main_user }}"
    mode: u=rw,go=r

- name: unmount backup partition
  become: yes
  ansible.builtin.command:
    cmd: "umount '{{ pi_server_apps_main_storage_backup_mount_dir }}'"
  changed_when: false

- name: install rsnapshot
  become: yes
  ansible.builtin.package:
    name: rsnapshot
    state: present

- name: rsnapshot.conf
  become: yes
  ansible.builtin.template:
    src: rsnapshot.conf.j2
    dest: /etc/rsnapshot.conf
    owner: root
    group: root
    mode: a=r

- name: git ssh
  become: yes
  ansible.builtin.template:
    src: git-ssh.j2
    dest: "{{ pi_server_apps_backup_git_ssh }}"
    owner: root
    group: root
    mode: a=rx

- name: main user sudoers
  ansible.builtin.include_role:
    name: pi_server.utils.sudoers_fragment
  vars:
    src: main-sudoers.j2
    name: "{{ pi_server_apps_backup_main_user }}"

- name: git user sudoers
  ansible.builtin.include_role:
    name: pi_server.utils.sudoers_fragment
  vars:
    src: git-sudoers.j2
    name: "{{ pi_server_apps_backup_git_user }}"

- name: main cronjob
  ansible.builtin.include_role:
    name: pi_server.apps.cron.cronjob
  vars:
    job: backup-main
    src: backup-main.j2
    user: "{{ pi_server_apps_backup_main_user }}"
    systemd_conflicts:
      - "{{ pi_server_apps_syncthing_service }}"
    docker_conflicts: []

- name: git cronjob
  ansible.builtin.include_role:
    name: pi_server.apps.cron.cronjob
  vars:
    job: backup-git
    src: backup-git.j2
    user: "{{ pi_server_apps_backup_git_user }}"
    systemd_conflicts: []
    docker_conflicts: []
