- name: dependency
  ansible.builtin.include_role:
    name: pi_server.base

- name: templates
  ansible.builtin.include_role:
    name: pi_server.utils.bootstrap_templates
  vars:
    dest_dir: "{{ args.fragments_dir }}"
    head_title: "{{ args.head_title }}"
    body_title: "{{ args.body_title }}"
    fragments_notify: "{{ args.fragments_notify }}"

- name: css
  become: true
  ansible.builtin.copy:
    src: pi.css
    dest: "{{ args.web_root }}/pi.css"
    owner: root
    group: root
    mode: u=rw,go=r

- name: favicon.ico
  become: true
  ansible.builtin.copy:
    src: "{{ args.favicon_basename }}.ico"
    dest: "{{ args.web_root }}/favicon.ico"
    owner: root
    group: root
    mode: u=rw,go=r

- name: favicon.png
  become: true
  ansible.builtin.copy:
    src: "{{ args.favicon_basename }}.png"
    dest: "{{ args.web_root }}/favicon.png"
    owner: root
    group: root
    mode: u=rw,go=r

- name: favicon-apple.png
  become: true
  ansible.builtin.copy:
    src: "{{ args.favicon_basename }}-apple.png"
    dest: "{{ args.web_root }}/favicon-apple.png"
    owner: root
    group: root
    mode: u=rw,go=r

- name: check if bootstrap installed
  become: true
  ansible.builtin.command:
    cmd: "ls '{{ args.web_root }}/bootstrap-{{ pi_server_utils_bootstrap_templates_bootstrap_version }}-dist'"
  register: bootstrap_exists
  failed_when: false
  changed_when: false

- name: download bootstrap
  become: true
  ansible.builtin.get_url:
    url: "https://github.com/twbs/bootstrap/releases/download/v{{ pi_server_utils_bootstrap_templates_bootstrap_version }}/bootstrap-{{ pi_server_utils_bootstrap_templates_bootstrap_version }}-dist.zip"
    dest: "{{ args.temp_dir }}/bootstrap-{{ pi_server_utils_bootstrap_templates_bootstrap_version }}.zip"
    owner: root
    group: root
    mode: a=r
  when: bootstrap_exists.rc != 0

- name: extract bootstrap
  become: true
  ansible.builtin.unarchive:
    src: "{{ args.temp_dir }}/bootstrap-{{ pi_server_utils_bootstrap_templates_bootstrap_version }}.zip"
    remote_src: true
    dest: "{{ args.web_root }}"
    owner: root
    group: root
    mode: u=rwx,go=rx
  when: bootstrap_exists.rc != 0

- name: initial dir permissions
  become: yes
  ansible.builtin.command:
    cmd: "find '{{ args.web_root }}' -type d -exec stat -c '%n %a' '{}' ';'"
  changed_when: false
  register: initial_dir_permissions

- name: fix dir permissions
  become: yes
  ansible.builtin.command:
    cmd: "find '{{ args.web_root }}' -type d -exec chmod 'u=rwx,go=rx' '{}' ';' -exec stat -c '%n %a' '{}' ';'"
  changed_when: initial_dir_permissions.stdout_lines | sort() != dir_permissions.stdout_lines | sort()
  register: dir_permissions

- name: initial file permissions
  become: yes
  ansible.builtin.command:
    cmd: "find '{{ args.web_root }}' -type f -exec stat -c '%n %a' '{}' ';'"
  changed_when: false
  register: initial_file_permissions

- name: fix file permissions
  become: yes
  ansible.builtin.command:
    cmd: "find '{{ args.web_root }}' -type f -exec chmod 'u=rw,go=r' '{}' ';' -exec stat -c '%n %a' '{}' ';'"
  changed_when: initial_file_permissions.stdout_lines | sort() != file_permissions.stdout_lines | sort()
  register: file_permissions
